apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: tanzu-java-web-app
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: tanzu-java-web-app
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: tanzu-java-web-app
spec:
  template:
    metadata:
      annotations:
        apps.tanzu.vmware.com/correlationid: https://github.com/ftovaro/tanzu-java-web-app-2?sub_path=/
        boot.spring.io/version: 2.7.4
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          spring-boot-convention/app-live-view-appflavour-check
          spring-boot-convention/app-live-view-connector-boot
          spring-boot-convention/app-live-view-appflavours-boot
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"creationTimestamp":"2023-11-22T16:48:05Z","generation":1,"labels":{"app.kubernetes.io/part-of":"tanzu-java-web-app","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/workload-type":"web"},"name":"tanzu-java-web-app","namespace":"my-apps","resourceVersion":"4716724","uid":"e66f4ae9-bf60-4cc2-8cc3-057719569656"},"spec":{"params":[{"name":"serviceAccount","value":"default2"}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/ftovaro/tanzu-java-web-app-2"}}},"status":{"conditions":[{"lastTransitionTime":"2023-11-22T16:48:05Z","message":"","reason":"Ready","status":"True","type":"SupplyChainReady"},{"lastTransitionTime":"2023-11-22T16:49:50Z","message":"waiting to read value [.status.compliantArtifact.registry.image] from object [imagescans.scanning.apps.tanzu.vmware.com/tanzu-java-web-app] in namespace [my-apps]","reason":"MissingValueAtPath","status":"Unknown","type":"ResourcesSubmitted"},{"lastTransitionTime":"2023-11-22T16:48:49Z","message":"","reason":"HealthyConditionRule","status":"Unknown","type":"ResourcesHealthy"},{"lastTransitionTime":"2023-11-22T16:49:50Z","message":"waiting to read value [.status.compliantArtifact.registry.image] from object [imagescans.scanning.apps.tanzu.vmware.com/tanzu-java-web-app] in namespace [my-apps]","reason":"MissingValueAtPath","status":"Unknown","type":"Ready"}],"observedGeneration":1,"resources":[{"conditions":[{"lastTransitionTime":"2023-11-22T16:48:12Z","message":"","reason":"ResourceSubmissionComplete","status":"True","type":"ResourceSubmitted"},{"lastTransitionTime":"2023-11-22T16:48:12Z","message":"stored artifact for revision 'main@sha1:02946264719e3dd2f024925f70cb9b306c723bd9'","reason":"ReadyCondition","status":"True","type":"Healthy"},{"lastTransitionTime":"2023-11-22T16:48:12Z","message":"","reason":"Ready","status":"True","type":"Ready"}],"name":"source-provider","outputs":[{"digest":"sha256:8c69f8cee0920c8fea89c6998844ea574dd4928ced9559a83bc0cacca7347f05","lastTransitionTime":"2023-11-22T16:48:12Z","name":"url","preview":"http://fluxcd-source-controller.flux-system.svc.cluster.local./gitrepository/my-apps/tanzu-java-web-app/02946264719e3dd2f024925f70cb9b306c723bd9.tar.gz\n"},{"digest":"sha256:252ce5f763910fc044abf9beae83f0fbe09b55583713711133ea3a298ee48549","lastTransitionTime":"2023-11-22T16:48:12Z","name":"revision","preview":"main@sha1:02946264719e3dd2f024925f70cb9b306c723bd9\n"}],"stampedRef":{"apiVersion":"source.toolkit.fluxcd.io/v1beta1","kind":"GitRepository","name":"tanzu-java-web-app","namespace":"my-apps","resource":"gitrepositories.source.toolkit.fluxcd.io"},"templateRef":{"apiVersion":"carto.run/v1alpha1","kind":"ClusterSourceTemplate","name":"source-template"}},{"conditions":[{"lastTransitionTime":"2023-11-22T16:48:49Z","message":"","reason":"ResourceSubmissionComplete","status":"True","type":"ResourceSubmitted"},{"lastTransitionTime":"2023-11-22T16:48:49Z","message":"","reason":"ReadyCondition","status":"True","type":"Healthy"},{"lastTransitionTime":"2023-11-22T16:48:49Z","message":"","reason":"Ready","status":"True","type":"Ready"}],"inputs":[{"name":"source-provider"}],"name":"source-tester","outputs":[{"digest":"sha256:8c69f8cee0920c8fea89c6998844ea574dd4928ced9559a83bc0cacca7347f05","lastTransitionTime":"2023-11-22T16:48:49Z","name":"url","preview":"http://fluxcd-source-controller.flux-system.svc.cluster.local./gitrepository/my-apps/tanzu-java-web-app/02946264719e3dd2f024925f70cb9b306c723bd9.tar.gz\n"},{"digest":"sha256:252ce5f763910fc044abf9beae83f0fbe09b55583713711133ea3a298ee48549","lastTransitionTime":"2023-11-22T16:48:49Z","name":"revision","preview":"main@sha1:02946264719e3dd2f024925f70cb9b306c723bd9\n"}],"stampedRef":{"apiVersion":"carto.run/v1alpha1","kind":"Runnable","name":"tanzu-java-web-app","namespace":"my-apps","resource":"runnables.carto.run"},"templateRef":{"apiVersion":"carto.run/v1alpha1","kind":"ClusterSourceTemplate","name":"testing-pipeline"}},{"conditions":[{"lastTransitionTime":"2023-11-22T16:49:50Z","message":"","reason":"ResourceSubmissionComplete","status":"True","type":"ResourceSubmitted"},{"lastTransitionTime":"2023-11-22T16:49:50Z","message":"condition status: True, message: ","reason":"MatchedCondition","status":"True","type":"Healthy"},{"lastTransitionTime":"2023-11-22T16:49:50Z","message":"","reason":"Ready","status":"True","type":"Ready"}],"inputs":[{"name":"source-tester"}],"name":"image-provider","outputs":[{"digest":"sha256:01919faf68f121e23fb34cd20c911306d632eb67877a3b15ef79f26d6f7c7560","lastTransitionTime":"2023-11-22T16:49:50Z","name":"image","preview":"shepherd79619f7de7616e5779cababd.azurecr.io/tap-install/workloads/tanzu-java-web-app-my-apps@sha256:8f75dac91536c06e2e7b254bd98757014b8663b782469b85709782d819639c1d\n"}],"stampedRef":{"apiVersion":"kpack.io/v1alpha2","kind":"Image","name":"tanzu-java-web-app","namespace":"my-apps","resource":"images.kpack.io"},"templateRef":{"apiVersion":"carto.run/v1alpha1","kind":"ClusterImageTemplate","name":"kpack-template"}},{"conditions":[{"lastTransitionTime":"2023-11-22T16:49:50Z","message":"waiting to read value [.status.compliantArtifact.registry.image] from object [imagescans.scanning.apps.tanzu.vmware.com/tanzu-java-web-app] in namespace [my-apps]","reason":"MissingValueAtPath","status":"Unknown","type":"ResourceSubmitted"},{"lastTransitionTime":"2023-11-22T16:49:50Z","message":"","reason":"NoMatchesFulfilled","status":"Unknown","type":"Healthy"},{"lastTransitionTime":"2023-11-22T16:49:50Z","message":"waiting to read value [.status.compliantArtifact.registry.image] from object [imagescans.scanning.apps.tanzu.vmware.com/tanzu-java-web-app] in namespace [my-apps]","reason":"MissingValueAtPath","status":"Unknown","type":"Ready"}],"inputs":[{"name":"image-provider"}],"name":"image-scanner","stampedRef":{"apiVersion":"scanning.apps.tanzu.vmware.com/v1beta1","kind":"ImageScan","name":"tanzu-java-web-app","namespace":"my-apps","resource":"imagescans.scanning.apps.tanzu.vmware.com"},"templateRef":{"apiVersion":"carto.run/v1alpha1","kind":"ClusterImageTemplate","name":"image-scanner-template"}},{"conditions":[{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"unable to stamp object for resource [config-provider] for template [ClusterConfigTemplate/convention-template] in supply chain [source-test-scan-to-url]: unable to apply ytt template: ytt: Error: \n- struct has no .image field or method (did you mean .images?)\n    in \u003ctoplevel\u003e\n      stdin.yml:108 |           image: #@ data.values.image\n","reason":"TemplateStampFailure","status":"False","type":"ResourceSubmitted"},{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"","reason":"Unknown","status":"Unknown","type":"Healthy"},{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"unable to stamp object for resource [config-provider] for template [ClusterConfigTemplate/convention-template] in supply chain [source-test-scan-to-url]: unable to apply ytt template: ytt: Error: \n- struct has no .image field or method (did you mean .images?)\n    in \u003ctoplevel\u003e\n      stdin.yml:108 |           image: #@ data.values.image\n","reason":"TemplateStampFailure","status":"False","type":"Ready"}],"inputs":[{"name":"image-scanner"}],"name":"config-provider","templateRef":{"apiVersion":"carto.run/v1alpha1","kind":"ClusterConfigTemplate","name":"convention-template"}},{"conditions":[{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"unable to stamp object for resource [app-config] for template [ClusterConfigTemplate/config-template] in supply chain [source-test-scan-to-url]: unable to apply ytt template: ytt: Error: \n- struct has no .config field or method (did you mean .configs?)\n    in delivery\n      stdin.yml:30 |   template: #@ data.values.config\n    in \u003ctoplevel\u003e\n      stdin.yml:40 |   delivery.yml: #@ yaml.encode(delivery())\n","reason":"TemplateStampFailure","status":"False","type":"ResourceSubmitted"},{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"","reason":"NoStampedObject","status":"Unknown","type":"Healthy"},{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"unable to stamp object for resource [app-config] for template [ClusterConfigTemplate/config-template] in supply chain [source-test-scan-to-url]: unable to apply ytt template: ytt: Error: \n- struct has no .config field or method (did you mean .configs?)\n    in delivery\n      stdin.yml:30 |   template: #@ data.values.config\n    in \u003ctoplevel\u003e\n      stdin.yml:40 |   delivery.yml: #@ yaml.encode(delivery())\n","reason":"TemplateStampFailure","status":"False","type":"Ready"}],"inputs":[{"name":"config-provider"}],"name":"app-config","templateRef":{"apiVersion":"carto.run/v1alpha1","kind":"ClusterConfigTemplate","name":"config-template"}},{"conditions":[{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"unable to stamp object for resource [service-bindings] for template [ClusterConfigTemplate/service-bindings] in supply chain [source-test-scan-to-url]: unable to apply ytt template: ytt: Error: \n- struct has no .app_def field or method\n    in add_claims\n      stdin.yml:152 | #@    return struct.decode(data.values.configs.app_def.config)\n    in \u003ctoplevel\u003e\n      stdin.yml:162 | data: #@ add_claims()\n","reason":"TemplateStampFailure","status":"False","type":"ResourceSubmitted"},{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"","reason":"NoStampedObject","status":"Unknown","type":"Healthy"},{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"unable to stamp object for resource [service-bindings] for template [ClusterConfigTemplate/service-bindings] in supply chain [source-test-scan-to-url]: unable to apply ytt template: ytt: Error: \n- struct has no .app_def field or method\n    in add_claims\n      stdin.yml:152 | #@    return struct.decode(data.values.configs.app_def.config)\n    in \u003ctoplevel\u003e\n      stdin.yml:162 | data: #@ add_claims()\n","reason":"TemplateStampFailure","status":"False","type":"Ready"}],"inputs":[{"name":"app-config"}],"name":"service-bindings","templateRef":{"apiVersion":"carto.run/v1alpha1","kind":"ClusterConfigTemplate","name":"service-bindings"}},{"conditions":[{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"unable to stamp object for resource [api-descriptors] for template [ClusterConfigTemplate/api-descriptors] in supply chain [source-test-scan-to-url]: unable to apply ytt template: ytt: Error: \n- struct has no .app_def field or method\n    in add_api_descriptors\n      stdin.yml:89 | #@    return struct.decode(data.values.configs.app_def.config)\n    in \u003ctoplevel\u003e\n      stdin.yml:99 | data: #@ add_api_descriptors()\n","reason":"TemplateStampFailure","status":"False","type":"ResourceSubmitted"},{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"","reason":"NoStampedObject","status":"Unknown","type":"Healthy"},{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"unable to stamp object for resource [api-descriptors] for template [ClusterConfigTemplate/api-descriptors] in supply chain [source-test-scan-to-url]: unable to apply ytt template: ytt: Error: \n- struct has no .app_def field or method\n    in add_api_descriptors\n      stdin.yml:89 | #@    return struct.decode(data.values.configs.app_def.config)\n    in \u003ctoplevel\u003e\n      stdin.yml:99 | data: #@ add_api_descriptors()\n","reason":"TemplateStampFailure","status":"False","type":"Ready"}],"inputs":[{"name":"service-bindings"}],"name":"api-descriptors","templateRef":{"apiVersion":"carto.run/v1alpha1","kind":"ClusterConfigTemplate","name":"api-descriptors"}},{"conditions":[{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"unable to stamp object for resource [config-writer] for template [ClusterTemplate/config-writer-template] in supply chain [source-test-scan-to-url]: unable to apply ytt template: ytt: Error: \n- struct has no .config field or method (did you mean .configs?)\n    in \u003ctoplevel\u003e\n      stdin.yml:162 |       value: #@ base64.encode(json.encode(data.values.config))\n","reason":"TemplateStampFailure","status":"False","type":"ResourceSubmitted"},{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"","reason":"Unknown","status":"Unknown","type":"Healthy"},{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"unable to stamp object for resource [config-writer] for template [ClusterTemplate/config-writer-template] in supply chain [source-test-scan-to-url]: unable to apply ytt template: ytt: Error: \n- struct has no .config field or method (did you mean .configs?)\n    in \u003ctoplevel\u003e\n      stdin.yml:162 |       value: #@ base64.encode(json.encode(data.values.config))\n","reason":"TemplateStampFailure","status":"False","type":"Ready"}],"inputs":[{"name":"api-descriptors"}],"name":"config-writer","templateRef":{"apiVersion":"carto.run/v1alpha1","kind":"ClusterTemplate","name":"config-writer-template"}},{"conditions":[{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"","reason":"ResourceSubmissionComplete","status":"True","type":"ResourceSubmitted"},{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"","reason":"AlwaysHealthy","status":"True","type":"Healthy"},{"lastTransitionTime":"2023-11-22T16:48:09Z","message":"","reason":"Ready","status":"True","type":"Ready"}],"name":"deliverable","stampedRef":{"apiVersion":"carto.run/v1alpha1","kind":"Deliverable","name":"tanzu-java-web-app","namespace":"my-apps","resource":"deliverables.carto.run"},"templateRef":{"apiVersion":"carto.run/v1alpha1","kind":"ClusterTemplate","name":"deliverable-template"}}],"supplyChainRef":{"kind":"ClusterSupplyChain","name":"source-test-scan-to-url"}}}
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: tanzu-java-web-app
        apps.tanzu.vmware.com/auto-configure-actuators: "false"
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: tanzu-java-web-app
        conventions.carto.run/framework: spring-boot
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.path: actuator
        tanzu.app.live.view.application.actuator.port: "8080"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: tanzu-java-web-app
    spec:
      containers:
      - env:
        - name: JAVA_TOOL_OPTIONS
          value: -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.health.probes.enabled="true" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
        image: shepherd79619f7de7616e5779cababd.azurecr.io/tap-install/workloads/tanzu-java-web-app-my-apps@sha256:8f75dac91536c06e2e7b254bd98757014b8663b782469b85709782d819639c1d
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources: {}
        securityContext:
          runAsUser: 1000
        startupProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
      serviceAccountName: default2

